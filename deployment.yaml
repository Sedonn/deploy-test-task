apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-deployment
  namespace: web-app-namespace
  labels:
    app: web-app
    environment: production
spec:
  # Необходимое количество реплик с учетом нагрузочных тестов
  replicas: 4
  # Стратегия обновления
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: web-app
      environment: production
  template:
    metadata:
      labels:
        app: web-app
        environment: production
    spec:
      containers:
        - name: web
          image: web-app:v0.1
          ports:
            - containerPort: 8080
          # Пробрасываем env-переменные
          envFrom:
            - configMapRef:
                name: web-app-env
          # Монтируем конфигурацию
          volumeMounts:
            - name: web-app-config-volume
              mountPath: /etc/config.yaml
          # Определяем ресурсы
          # Для памяти возьмем QoS: Guaranteed
          # Для процессора возьмем QoS: Burstable, так как нагрузка в начале может вырасти и нам нужно гарантированно увеличить ресурсы
          resources:
            requests:
              memory: "128Mi"
              cpu: "0.1"
            limits:
              memory: "128Mi"
              cpu: "1"
          # Регулярно проверяем после запуска живо ли приложение
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              initialDelaySeconds: 3
              periodSeconds: 2
          # Так как в начале большая нагрузка, используем эту пробу, чтобы Kubernetes не думал, что у нас упал Pod
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/health
              initialDelaySeconds: 5
              periodSeconds: 5
          # Чтобы не было CrashLoop из за долгого запуска, используем эту пробу
          startupProbe:
            httpGet:
              path: /health
              port: liveness-port
              failureTreshhold: 10
              periodSeconds: 5
    # Монтируем конфиг
    volumes:
      - name: web-app-config-volume
        configMap:
          name: web-app-config
